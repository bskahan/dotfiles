# Author: Brian Skahan <bskahan@etria.com>
# Last Updated: <Thu Mar 26 07:57:56 2009>
# My new .muttrc file
# =========================================================



#{{{ Clear sttings, source files ==========================

reset all		# reset all variables to system defaults.
unhook *		# remove all hooks

# set this first
set folder=~/.mail

# put some things into other files
source ~/.mutt/aliases
source ~/.mutt/colors

# Header fields I don't normally want to see
ignore *
unignore	from: subject to cc mail-followup-to date

#}}}=======================================================



#{{{ Boolean settings =====================================

unset allow_8bit	# use QP or Base64 if unset.
set arrow_cursor	# "->" as cursor (faster on slow networks).
set ascii_chars		# Use ASCII chars for threading arrows.
unset askbcc		# ask to fill out Bcc on mesg-send?
unset askcc		# ask to fill out CC on mesg-send?
set attach_split	# handle every single attachment instead of concat
unset autoedit		# start editor without asking for to, subject,...
unset auto_tag		# if something is tagged, run commands on tagged msgs.
unset beep		# beep on certain user errors and other errors
unset beep_new		# beep on new mail
set bounce_delivered	# unset => remove Delivered-To: when bouncing.
set check_new		# search for new messages in maildir/MH folders.
unset collapse_unread	# don't collapse threads with unread mails
unset confirmappend	# prompt for confirm when appending message to ex. mbox
set confirmcreate	# prompt for confirm when saving to non existing mbox
set copy
set delete_untag	# untag messages when marking them for deletion
set digest_collapse	# show digest parts in 'v' submenu
set edit_headers	# put headers in editor when composing messages
set encode_from		# use Quoted-Printable, if ^From in a mail.
#unset envelope_from	# don't set envelope from via -f option of sendmail
unset fast_reply	# do not ask for to, subject,... when replying.
set fcc_attach		# store attachments too when doing a Fcc
unset fcc_clear		# encrypt Fcc of PGP encrypted messages?
set followup_to		# Add Mail-Followup-To header.
unset force_name	# outgoing mail to be saved in folder of "login name"
set forward_decode	# decode messages when forwarding without MIME
set forward_decrypt	# decrypt PGP message, when mime_forward and !mime_fw_d
unset forward_quote	# quote forwarded message, if not $mime_forward
set hdrs		# nohdrs implies not to write my_hdr into mail.
unset header		# quote full header on reply
set help		# show help in first line of the display
unset hidden_host	# when set, skip the host name part of hostname
set ignore_list_reply_to	# ignore Reply-To pointing back to mailinglist
unset implicit_autoview	# use autoview, if a "copiousoutput" is in mailcap.
set mailcap_sanitize	# remove ugly chars from mailcap % expands.
unset maildir_trash	# if set: use maildir trash flag instead of removing
set mark_old		# mark new articles as old, when leaving mbox
set markers		# put a '+' at the beginning of wrapped lines.	
unset menu_scroll	# scroll on last line of menu (set) or do a nextpage?
unset meta_key		# Don't interpret Alt-x as ESC x
unset metoo		# should we keep ourselves in group replies?
set mh_purge		# remove messages marked as deleted from MH folders.
unset mime_forward_decode	# decode messages when forwarding with MIME
set pager_stop		# Don't jump to next message at end of message.
unset pipe_decode	# Weed headers and PGP-decode message before piping
unset pipe_split	# split tagged messages (or don't) when using "|"
set   print_command="a2ps -1 -M letter -R"
#set pretty_spoolfile	# print $spoolfile as "!" instead of full pathname
set print_decode	# decode before sending to $print_command
unset print_split	# if set, run the print command for every single mail
set prompt_after	# display prompt after exit from pager
unset read_only		# folders not read only
unset reply_self	# if unset, a reply to yourself implies reply to other
set resolve		# go to next undeleted message after modifying actual
set reverse_alias	# use realname from reverse alias lookup
unset reverse_name	# Set "From" to address, where replied mail was sent to
unset reverse_realname	# Do not reuse realname from original message.
unset rfc2047_parameters	# don't encode RFC2047 parameters
unset save_address	# Use full mail adress (with domain) as default folder.
unset save_empty	# remove mailbox when last message is removed.
unset save_name		# Fcc, if ~/Mail/<to> exists.
#unset sig_dashes	# Don't prepend "-- \n" to the signature
unset sig_on_top	# place signature above text (if set).
set smart_wrap		# wrap long lines at word boundary.
unset sort_re		# set: only put a child in a thread, if starts with Re:
unset status_on_top	# status line at the top or button?
set strict_threads	# thread only by In-Reply-To/References or by Subject.
#set suspend		# Ctrl-Z is able to suspend mutt.
set thorough_search	# MIME decode before searching.
unset tilde		# Internal Pager: ~~~~ at and of message?
unset uncollapse_jump	# don't move pointer, when uncollapsing thread
unset use_8bitmime	# run sendmail 8.8.x with -B8BITMIME to enable 8bit 
set use_domain		# add $domain to all addresses without @host
set use_from		# generate a "From:" header (unless my_hdr From:)
set user_agent		# Create User-Agent: Mutt/<Version> header.
unset wait_key		# Only "press a key" if return value non-zero
set weed		# weed headers, when forwarding with forward_decode
set wrap_search		# Wrap search to top/bottom.
unset write_bcc		# send Bcc: line to $sendmail 

#}}}=======================================================



#{{{ Ask settings =========================================

set abort_nosubject=no	# Abort, if message has no subject.
set abort_unmodified=ask-yes	# Abort, if message wasn't edited.
#set copy=ask-no		# ask to save a copy of outgoing message?
set delete=ask-yes	# ask for confirmation when deleting messages?
set honor_followup_to=ask-yes	# Ask whether to honor Mail-Followup-To header.
set include=yes		# quote message, when replying
set mime_forward=ask-yes	# use MIME when forwarding mails.
set mime_forward_rest=ask-yes	# forward attachments w/o autoview from attmenu
set move=ask-yes 	# Move mail-spool to $mbox?
set postpone=ask-yes	# ask for postponing when doing an Abort.
set print=ask-yes	# ask whether you really want to print.
set quit=ask-yes	# ask before quitting.
set recall=no		# don't ask for using postponed message.
set reply_to=ask-yes	# Use or ignore Reply-To.

#}}}=======================================================



#{{{ Variable settings ====================================

set connect_timeout=30	# timeout (seconds) before reconnect. -1 => indefinite
set history=200		# Size of the history buffer
set mail_check=3	# time (in seconds) how often buffy checks for new mail
#set pager_index_lines=`zsh -c 'temp=($(stty size)) ; expr $temp[1] / 5 + 1'`
set pager_index_lines=`((stty size 2>/dev/null||echo 24 80);echo s0 5/1+p)|dc`
#set pager_index_lines=5
set read_inc=10		# Mutt will notify when reading mailbox messages
set sendmail_wait=0	# >0 (wait seconds), 0 (forground), <0 (background)
set timeout=60		# time in seconds, till Mutt looks for new mail
set write_inc=10	# Mutt will notify when writing mailbox messages

# set the editor
set editor="vim '+/^$'"
# use aspell instead of ispell
#set ispell="/usr/bin/aspell -pipe"
# save outgoing
set record=~/.mail/OUT.mail
# set the shell
set shell=zsh


#
# alias_format
# (format of data displayed for the alias menu)
# %a alias name    %n index number    %r address    %t tag-character 
#
set alias_format="%4n %t %12a  %r"
set alias_file=~/.mutt/aliases
set sort_alias=alias

# start mutt with collapsed threads
folder-hook . exec collapse-all
set hostname=etria.com
send-hook . "set signature=~/.signature"
send-hook . "unset pgp_autoencrypt"

set attach_format="%u%D%I %t%4n %T%.40d%> [%.7m/%.10M, %.6e%?C?, %C?, %s] "
set date_format="!%a, %b %d, %Y at %I:%M:%S%p %Z"
set index_format="%3C %3N %Z %{%b %d} %-13.13L %2M %s"
#set index_format="%3C %3N %Z %-15.15a %2M %s"
set sort=threads
set sort_aux=date
set forward_format="(fwd) %s"
# attribution given to quoted text
# set  attribution = "On %d, %n wrote:" # default
# %C current number	%d last modified	%f filename
# %F permissions	%g group		%l number of hard links
# %N "N" if new mail	%s size in bytes	%t "*" if tagged
# %u owner name		%>X right justify the rest and pad with "X"
# %|X pad to the end of the line with character "X"
set attribution="* %n <%a> [%(%y%m%d %H:%M)]:"

#}}}=======================================================



#{{{ Setup files and folders ==============================

set folder_format="%2C %t %N %F %2l %-8.8u %8s %d %f"
# %C current file number	%d date/time last modified
# %f filename			%F permissions
# %g group or gid		%l number of hard links
# %N N if folder has new mail	%s size in bytes
# %t * if file is tagged	%u owner or uid of owner
# %>x right justify and pad x	%|x pad to eol with x

set mbox="~/.mail/mbox"

# inboxes
# mailboxes =INBOX =ma-linux =root \
# 	=vim-dev =galeon-user \
# 	=politech =personal =baltolug \
# 	=csdc =digital_harbor =fool \
# 	=/var/spool/mail/bskahan 

mailboxes =INBOX

# remote mailboxes XXX
account-hook . 'unset imap_user; unset imap_pass; unset tunnel'
account-hook imaps://imap.gmail.com:993 'set imap_user = "brian.skahan@gmail.com"
	set imap_pass = NOTPUBLIC

	set from = "brian.skahan@gmail.com"
	set realname = "Brian Skahan"

	set folder = "imaps://imap.gmail.com:993"
	set spoolfile = "+INBOX"
	set postponed="+[Gmail]/Drafts"

	set certificate_file=~/.mutt/certificates'
# set smtp_url = "smtp://brian.skahan@smtp.gmail.com:587/"
# set smtp_pass = "H3gP7wJ9"
	
#	set header_cache=~/.mutt/cache/headers
#	set message_cachedir=~/.mutt/cache/bodies

# outgoing mailboxes
mailboxes =OUT.mail

#
# Hooks
#
#folder-hook =maillog/personal source ~/.mutt/folders/personalrc
#folder-hook =INBOX source ~/.mutt/folders/INBOXrc
#folder-hook =OUT.mail source ~/.mutt/folders/OUT.mailrc
#folder-hook =maillog/baltolug source ~/.mutt/folders/baltolugrc

#send-hook tvon@etria.org "set pgp_autoencrypt"
send-hook tvon@etria.org "set signature="
#send-hook eskahan@drew.edu "set envelope_from"
#send-hook eskahan@drew.edu "set from=bskahan@etria.org"


#
# status_format
#

# %b # of folders with new mail			%d # of deleted msgs
# %f mbox path		%F # of flagged msgs	%h hostname
# %m total# of messages %M # of shown msgs	%n # of new msgs
# %l bytes in mbox	%L size of limited msgs %o # of old msgs
# %p # of postponed. msgs	%P percentage of the display             
# %r readonly/changed   %s sorting method	%S sort_aux method
# %t # of tagged msgs	%u # of unread msgs	%v Mutt version
# %>X = right justify and pad with "X"	 %|X = pad with "X" to end of line
# %?<sequence_char>?<optional_string>?   print <opt> iff <seq> is non zero
# %?<sequence_char>?<if_string>&<else_string>?

#set status_format="-%r-%v--[%?M?%M/?%m msgs%?n?, %n new?%?d?, %d del?%?F?, %F flag?%?t?, %t tag?%?p?, %p postp?%?b?, %b inc?%?l?, %l?]--(%f)--%s/%S-%>-%P-"
#set status_format="-%r-%v--[%?M?%M/?%m msgs%?n?, %n new?%?d?, %d del?%?F?, %F flag?%?t?, %t tag?%?p?, %p postp?%?b?, %b inc?%?l?, ?%?L?%L/?%?l?%l?]--(%f)--%s/%S-%>-%P-"
#set status_format="-%r-%v--[%?M?%M/?%m msgs%?n?, %n new?%?d?, %d del?%?F?, %F flag?%?t?, %t tag?%?p?, %p postp?%?b?, %b inc?%?l?, %l?]--(%f)--%s-%>-%P-"
set status_format="-%r-[%?M?%M/?%m msgs%?n?, %n new?%?d?, %d del?%?F?, %F flag?%?t?, %t tag?%?p?, %p postp?%?b?, %b inc?%?l?, %l?]--(%f)--%>-%P-"

#}}}=======================================================



#{{{ PGP Settings =========================================

# decode application/pgp
set pgp_decode_command="gpg %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"

# verify a pgp/mime signature
set pgp_verify_command="gpg --no-verbose --batch --output - --verify %s %f"

# decrypt a pgp/mime attachment
set pgp_decrypt_command="gpg --passphrase-fd 0 --no-verbose --batch --output - %f"

# create a pgp/mime signed attachment
# set pgp_sign_command="gpg-2comp --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_sign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"

# create a application/pgp signed (old-style) message
# set pgp_clearsign_command="gpg-2comp --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_clearsign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"

# create a pgp/mime encrypted attachment
# set pgp_encrypt_only_command="pgpewrap gpg-2comp -v --batch --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_only_command="pgpewrap gpg -v --batch --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"

# create a pgp/mime encrypted and signed attachment
# set pgp_encrypt_sign_command="pgpewrap gpg-2comp --passphrase-fd 0 -v --batch --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"
set pgp_encrypt_sign_command="pgpewrap gpg --passphrase-fd 0 -v --batch --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

#############
# get keys from server
#set pgp_getkeys_command="gpg -q --no-verbose --keyserver certserver.pgp.com --recv-keys %r"

# import a key into the public key ring
set pgp_import_command="gpg --no-verbose --import -v %f"

# export a key from the public key ring
set pgp_export_command="gpg --no-verbose --export --armor %r"

# verify a key
set pgp_verify_key_command="gpg --no-verbose --batch --fingerprint --check-sigs %r"

# read in the public key ring
set pgp_list_pubring_command="gpg --no-verbose --batch --with-colons --list-keys %r" 

# read in the secret key ring
set pgp_list_secring_command="gpg --no-verbose --batch --with-colons --list-secret-keys %r" 

# receive key from keyserver:
#set pgp_getkeys_command="gpg --no-verbose --recv-key %r"
#set pgp_getkeys_command="~/bin/wrap.sh %r"
set pgp_getkeys_command="gpg --recv-keys %r"

#set pgp_sign_as="13614F66"

set pgp_autosign	# pgp sign every outgoing mail. (send-hook?)
unset pgp_autoencrypt	# pgp encrypt every outgoing mail. (send-hook?)
unset pgp_replyencrypt	# Encrypt replies on encrypted mail
set pgp_replysign	# Sign replies on signed mail
unset pgp_replysignencrypted	# Sign replies on encrypted mail
unset pgp_retainable_sigs	# disable retainable signatures.
set pgp_verify_sig=yes	# ask me whether I want to check a pgp signature
set pgp_timeout=7200	# forget PGP passphrase after 7200 seconds (=2 hours)
unset pgp_strict_enc	# allway use QP enc. with PGP.
unset pgp_long_ids	# display 64bit PGP key-ids (don't change this!)
set pgp_show_unusable	# show unusable PGP keys in menu

set pgp_sign_as="bskahan"	# UserID/KeyID for signing

# %n = number	%k = key id	%K = key id of the principal key
# %u = user id	%a = algorithm	%A = algorithm of the princ. key
# %l = length	%L = length of the princ. key	
# %f = flags	%F = flags of the princ. key	
# %c = capabilities		%C = capabilities of the princ. key
# %t = trust/validity of the key-uid association
set pgp_entry_format="%4n %t%f %4l/0x%k %-4a %2c %u"
#set pgp_entry_format="%4n %t%f %[%y/%m/%d] %4l/0x%k %-4a %2c %u"

#
# Sorting of PGP keys:
# (address, keyid, date, trust) and reverse-*
#
#set pgp_sort_keys=trust

#}}}=======================================================



#{{{ Macros and Keybindings ===============================

# this quickly switches to an imap folder
macro index "I" "cimap://tiger.towson.edu/\n"
macro pager "I" "cimap://tiger.towson.edu/\n"

# and back again
macro index "i" "c=INBOX\n"
macro pager "i" "c=INBOX\n"

macro index ",o"  "c=INBOX\noc="    # sort by score
macro attach l "<pipe-entry>less\n" "View attachment using less"
macro attach w "pipe-entry>w3m\n" "View attachment using w3m"

bind index \Ca collapse-all
bind index \Cv collapse-thread
#some vimish movement commands
bind generic \Cu    half-up
bind generic \Cd    half-down
bind pager   \Cu    half-up
bind pager   \Cd    half-down
bind generic   b    previous-page
bind generic \Cb    previous-page
bind generic \Cf    next-page
bind generic   1G   first-entry
bind generic   1g   first-entry
bind generic \Ca    first-entry
bind generic   G    last-entry
bind generic \Ce    last-entry
#bind generic   :q!  exit

bind pager   \eD    delete-thread
bind pager   \eU    undelete-thread
bind pager \Ca      top
bind pager  1G      top
bind pager  1g      top
bind pager \Ce      bottom
bind pager   G      bottom
#bind pager  :q!     exit
#bind pager   q      exit
#bind pager   i      noop
#bind pager   B      bounce-message
bind pager   b      previous-page
bind index \eD     delete-thread
bind index \eU     undelete-thread
# ^U and ^D were bound otherwise, so bind it now again to something else
bind index   B     bounce-message
bind index \ef     forget-passphrase
bind index \Cb     previous-page
bind index \Cf     next-page
bind index   1G    first-entry
bind index   1g    first-entry
bind index \Ca     first-entry
bind index   gg first-entry
bind index   G     last-entry
bind index \Ce     last-entry
bind index \Cg group-reply # had to rebind this
#bind index :q!	   exit

bind alias <Tab> next-entry

# Show documentation when pressing F1
macro generic <f1> "!w3m /usr/share/doc/mutt-1.4-r3/html/manual.html"\
	"Show Mutt documentation"
macro index <f1> "!w3m /usr/share/doc/mutt-1.4-r3/html/manual.html"\
	"Show Mutt documentation"
macro pager <f1> "!w3m /usr/share/doc/mutt-1.4-r3/html/manual.html"\
	"Show Mutt documentation"

macro index \Cp "|pmrecipe.pl\n"
macro pager \Cp "|pmrecipe.pl\n"

# imitate the old search-body function
macro index \eb '/~b ' 'search in message bodies'

# simulate the old url menu
macro index \cb |urlview\n 'call urlview to extract URLs out of a message'
macro pager \cb |urlview\n 'call urlview to extract URLs out of a message'

# change dir directly to list
macro index ,c <change-folder>? "show the list"
macro pager ,c <change-folder>? "show the list"

#}}}=======================================================



#{{{ Score settings =======================================

#
# score <pattern> <value>
# unscore <pattern>
#
# (pattern is something like '~A' (all), '~f aol\.com$', '~s mutt' ...)
# (value is between -9999 and 9999. A prefix '=' sets otherwise incr/decr)
#
unscore *

set score			# turn off scoring
set score_threshold_delete=-999	# mark messages with score <=value deleted
set score_threshold_flag=999	# mark messages with score >=value flagged
set score_threshold_read=-1	# mark messages with score <=value read

#score ~A =100		# default value
score '~s free|~s Free|~s FREE' -99
score '~s sex|~s adult' -999
score '~f anonymous' -99
score ~F 100
score '~f kahan' +100
score '~f von' +100
#score '~s windows|~s Win2k|~s Win32|~s win 32' -500
score ~D =0
score '~f lug|~f LUG|~f um-linux' =50

#}}}=======================================================



#EOF vim:tw=78:noai

